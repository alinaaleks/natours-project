/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* in order to do each browser look the same way (basic RESET) */
* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

body {
  padding: 30px;
  color: #777777;
  font-family: "Lato", sans-serif;
  font-size: 16px;
  font-weight: 400;
  line-height: 1.7;
}

.header {
  position: relative;
  height: 95vh;
  background-position: top;
  /* first one goes on top */
  background-image: linear-gradient(
    to right bottom, 
    rgba(128, 214, 113, 0.8), 
    rgba(39, 180, 133, 0.8)), 
    url(../img/hero.jpg);
  /* whatever the width or the element it will always try to fit to it */
  background-size: cover;
  /* specify 4 corners - start from top left moving clockwise */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  height: 35px;
}

/* animation can be used in multiple places
.logo:hover {
  animation: moveInRight 1s ease-out;
} */

.text-box {
  position: absolute;
  /* in relation to the parent element */
  top: 40%;
  left: 50%;
  /* in relation to the element itself */
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  margin-bottom: 60px;
  color: #fff;
  text-transform: uppercase;
  /* part behind the element  */
  backface-visibility: hidden;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* another properties
  when it will start play
  animation-delay: 3s;
  how many times
  animation-iteration-count: 3; */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;
  animation: moveInRight 1s ease-out;
}

/* ANIMATION */
@keyframes moveInLeft {
  /* start */
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px);
  }

/* finish */
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInRight {
  /* start */
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  /* 60% {
    transform: rotate(180deg);
  } */

  80% {
    transform: translateX(-10px);
  }

/* finish */
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.btn:link, .btn:visited {
  /* inline blick is treated as text */
  display: inline-block;
  position: relative;
  padding: 15px 40px;
  border-radius: 100px;
  text-transform: uppercase;
  text-decoration: none;
  /* change initial state more smoothly */
  transition: all .2s;
}

.btn:hover {
  /* in relation to the initial state */
  transform: translateY(-3px);
  /* X direction, Y direction, blur, color*/
  box-shadow: 0 5px 10px rgba(0,0,0,.2);
}

.btn:active {
  /* in relation to the initial state */
  transform: translateY(-1px);
}

.btn-white {
  background-color: #fff;
  color: #777;
}

.btn::after {
  /* pseudo element which goes behind the button/ this element is treated as a child element (of the button) */
  display: inline-block;
  /* in relation to closer "relative" positioning it can find - and now it should be hidden behind the button */
  position: absolute;
  top: 0;
  left: 0;
  /* defines the position of element if it's one on top of the other - make it definitely behind*/
  z-index: -1;
  width: 100%;
  height: 100%;
  border-radius: 100px;
  content: "";
  transition: all .4s;
}

.btn-white::after {
  /* in order for pseudo element also to be white */
  background-color: #fff;
}

/* after pseudo element only when we have btn on the hover state */
.btn:hover::after {
  opacity: 0;
  /* increase the element */
  transform: scaleX(1.4) scaleY(1.6);
}

.btn-animated {
  /* name, duration, timing-function, delay */
  animation: moveInBottom .5s ease-out .75s;
  /* automatically applies 0% animation before the animation starts - so the btn will appear on the bottom where animation starts*/
  animation-fill-mode: backwards;
}